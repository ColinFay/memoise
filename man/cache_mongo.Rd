% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cache_mongo.R
\name{cache_mongo}
\alias{cache_mongo}
\title{MongoDB Cache
MongoDB cache, for remote caching.}
\usage{
cache_mongo(mongo_grid, algo = "sha512", compress = FALSE)
}
\arguments{
\item{mongo_grid}{A MongoDB GridFS connection object}

\item{algo}{The hashing algorithm used for the cache, see
\code{\link[digest]{digest}} for available algorithms.}

\item{compress}{Argument passed to \code{saveRDS}. One of FALSE, "gzip",
"bzip2" or "xz". Default: FALSE.}
}
\description{
MongoDB Cache
MongoDB cache, for remote caching.
}
\examples{

\dontrun{
# Creates a GridFS connection

mongo_grid <- mongolite::gridfs(
  db = "memoize",
  prefix = "memoize"
)

# Set mongo as a caching backend
mong <- cache_mongo(mongo_grid)
mem_runif <- memoise(runif, cache = mong)

# Try the cache
mem_runif(2)
mem_runif(2)

# Forget the cached fun
forget(mem_runif)
mem_runif(2)
mem_runif(2)

# Remove the cache
mong$reset()
mem_runif(2)
mem_runif(2)

# Adding some keys
mem_runif(3)
mem_runif(4)
mem_runif(5)
# List the keys
mong$keys()
# Drop one key
one <- mong$keys()[1]
two <- mong$keys()[2]
mong$drop_key(one)
mong$keys()

# Test if has key
mong$has_key(one)
mong$has_key(two)

}


}
